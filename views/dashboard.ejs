<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard - <%= config.assistanceName %></title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; background: #f5f5f5; }
        .container { max-width: 1200px; margin: 0 auto; padding: 20px; }
        .header { background: white; padding: 20px; border-radius: 10px; margin-bottom: 20px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        .header h1 { color: #333; margin-bottom: 10px; }
        .status { display: inline-block; padding: 5px 15px; border-radius: 20px; color: white; font-weight: bold; }
        .status.active { background: #28a745; }
        .status.paused { background: #dc3545; }
        .tabs { background: white; border-radius: 10px; margin-bottom: 20px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        .tab-buttons { display: flex; border-bottom: 1px solid #eee; }
        .tab-button { flex: 1; padding: 15px; border: none; background: none; cursor: pointer; border-radius: 10px 10px 0 0; transition: background 0.3s; }
        .tab-button.active { background: #007bff; color: white; }
        .tab-button:hover:not(.active) { background: #f8f9fa; }
        .tab-content { display: none; padding: 20px; }
        .tab-content.active { display: block; }
        .form-group { margin-bottom: 20px; }
        .form-group label { display: block; margin-bottom: 5px; color: #333; font-weight: 500; }
        .form-group input, .form-group textarea, .form-group select { width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 5px; font-size: 14px; }
        .form-group textarea { resize: vertical; min-height: 100px; }
        .btn { padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer; font-size: 14px; transition: background 0.3s; margin-right: 10px; margin-bottom: 10px; }
        .btn-primary { background: #007bff; color: white; }
        .btn-success { background: #28a745; color: white; }
        .btn-danger { background: #dc3545; color: white; }
        .btn-warning { background: #ffc107; color: #212529; }
        .btn:hover { opacity: 0.9; }
        .products-table { width: 100%; border-collapse: collapse; margin-top: 20px; }
        .products-table th, .products-table td { padding: 12px; text-align: left; border-bottom: 1px solid #ddd; }
        .products-table th { background: #f8f9fa; font-weight: 600; }
        .products-table tr:hover { background: #f8f9fa; }
        .modal { display: none; position: fixed; z-index: 1000; left: 0; top: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); }
        .modal-content { background: white; margin: 5% auto; padding: 20px; width: 90%; max-width: 500px; border-radius: 10px; }
        .close { color: #aaa; float: right; font-size: 28px; font-weight: bold; cursor: pointer; }
        .close:hover { color: #000; }
        .alert { padding: 10px; margin-bottom: 20px; border-radius: 5px; }
        .alert-success { background: #d4edda; color: #155724; border: 1px solid #c3e6cb; }
        .alert-danger { background: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }
        .stats-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px; margin-bottom: 20px; }
        .stat-card { background: white; padding: 20px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); text-align: center; }
        .stat-number { font-size: 2em; font-weight: bold; color: #007bff; }
        .logout { float: right; }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1><%= config.assistanceName %> - Dashboard</h1>
            <span class="status <%= config.aiActive ? 'active' : 'paused' %>">
                IA <%= config.aiActive ? 'ATIVA' : 'PAUSADA' %>
            </span>
            <button class="btn btn-danger logout" onclick="logout()">Sair</button>
        </div>

        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-number"><%= stats.totalProducts %></div>
                <div>Produtos</div>
            </div>
            <div class="stat-card">
                <div class="stat-number"><%= stats.totalConversations %></div>
                <div>Conversas</div>
            </div>
        </div>

        <div class="tabs">
            <div class="tab-buttons">
                <button class="tab-button active" onclick="openTab(event, 'products')">Produtos</button>
                <button class="tab-button" onclick="openTab(event, 'config')">Configurações</button>
                <button class="tab-button" onclick="openTab(event, 'ai')">IA & OpenRouter</button>
            </div>

            <div id="products" class="tab-content active">
                <button class="btn btn-success" onclick="openProductModal()">Adicionar Produto</button>
                <table class="products-table">
                    <thead>
                        <tr>
                            <th>Produto</th>
                            <th>Preço</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% products.forEach(product => { %>
                        <tr>
                            <td><%= product.item %></td>
                            <td>R$ <%= product.price.toFixed(2) %></td>
                            <td>
                                <button class="btn btn-warning" onclick="editProduct('<%= product.item %>', <%= product.price %>)">Editar</button>
                                <button class="btn btn-danger" onclick="deleteProduct('<%= product.item %>')">Excluir</button>
                            </td>
                        </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>

            <div id="config" class="tab-content">
                <form method="POST" action="/dashboard/config">
                    <div class="form-group">
                        <label>Nome da Assistência</label>
                        <input type="text" name="assistanceName" value="<%= config.assistanceName %>" required>
                    </div>
                    <div class="form-group">
                        <label>Horário de Atendimento</label>
                        <input type="text" name="workingHours" value="<%= config.workingHours %>" placeholder="08:00-18:00">
                    </div>
                    <div class="form-group">
                        <label>Número do Dono (WhatsApp)</label>
                        <input type="text" name="ownerPhone" value="<%= config.ownerPhone %>" placeholder="5511999999999">
                    </div>
                    <div class="form-group">
                        <label>Nova Senha do Dashboard (deixe vazio para manter atual)</label>
                        <input type="password" name="newPassword" placeholder="Digite nova senha">
                    </div>
                    <button type="submit" class="btn btn-primary">Salvar Configurações</button>
                </form>
            </div>

            <div id="ai" class="tab-content">
                <form method="POST" action="/dashboard/ai-config">
                    <div class="form-group">
                        <label>Status da IA</label>
                        <select name="aiActive">
                            <option value="true" <%= config.aiActive ? 'selected' : '' %>>Ativa</option>
                            <option value="false" <%= !config.aiActive ? 'selected' : '' %>>Pausada</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label>Treinamento da IA</label>
                        <textarea name="aiTraining" rows="6"><%= config.aiTraining %></textarea>
                    </div>
                    <div class="form-group">
                        <label>Modelo OpenRouter</label>
                        <select name="openRouterModel">
                            <option value="microsoft/wizardlm-2-8x22b" <%= config.openRouterModel === 'microsoft/wizardlm-2-8x22b' ? 'selected' : '' %>>WizardLM-2 8x22B</option>
                            <option value="meta-llama/llama-3.1-8b-instruct:free" <%= config.openRouterModel === 'meta-llama/llama-3.1-8b-instruct:free' ? 'selected' : '' %>>Llama 3.1 8B (Grátis)</option>
                            <option value="gpt-3.5-turbo" <%= config.openRouterModel === 'gpt-3.5-turbo' ? 'selected' : '' %>>GPT-3.5 Turbo</option>
                            <option value="gpt-4o-mini" <%= config.openRouterModel === 'gpt-4o-mini' ? 'selected' : '' %>>GPT-4O Mini</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label>API Key OpenRouter</label>
                        <input type="password" name="openRouterApiKey" value="<%= config.openRouterApiKey %>" placeholder="Digite sua API key">
                    </div>
                    <button type="submit" class="btn btn-primary">Salvar Configurações IA</button>
                </form>
            </div>
        </div>
    </div>

    <!-- Modal para Produto -->
    <div id="productModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeProductModal()">&times;</span>
            <h2 id="modalTitle">Adicionar Produto</h2>
            <form id="productForm">
                <div class="form-group">
                    <label>Nome do Produto</label>
                    <input type="text" id="productName" name="productName" required>
                </div>
                <div class="form-group">
                    <label>Preço (R$)</label>
                    <input type="number" id="productPrice" name="productPrice" step="0.01" min="0" required>
                </div>
                <button type="submit" class="btn btn-success">Salvar</button>
                <button type="button" class="btn" onclick="closeProductModal()">Cancelar</button>
            </form>
        </div>
    </div>

    <script>
        function openTab(evt, tabName) {
            var tabcontent = document.getElementsByClassName("tab-content");
            for (var i = 0; i < tabcontent.length; i++) {
                tabcontent[i].classList.remove("active");
            }
            var tablinks = document.getElementsByClassName("tab-button");
            for (var i = 0; i < tablinks.length; i++) {
                tablinks[i].classList.remove("active");
            }
            document.getElementById(tabName).classList.add("active");
            evt.currentTarget.classList.add("active");
        }

        function openProductModal(name = '', price = '') {
            document.getElementById('productModal').style.display = 'block';
            document.getElementById('modalTitle').textContent = name ? 'Editar Produto' : 'Adicionar Produto';
            document.getElementById('productName').value = name;
            document.getElementById('productPrice').value = price;
        }

        function closeProductModal() {
            document.getElementById('productModal').style.display = 'none';
            document.getElementById('productForm').reset();
        }

        function editProduct(name, price) {
            openProductModal(name, price);
        }

        function deleteProduct(name) {
            if (confirm('Tem certeza que deseja excluir o produto: ' + name + '?')) {
                fetch('/dashboard/product/' + encodeURIComponent(name), {
                    method: 'DELETE'
                }).then(() => location.reload());
            }
        }

        function logout() {
            fetch('/dashboard/logout', { method: 'POST' })
                .then(() => location.href = '/dashboard/login');
        }

        document.getElementById('productForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const formData = new FormData(this);
            const data = {
                name: formData.get('productName'),
                price: parseFloat(formData.get('productPrice'))
            };

            fetch('/dashboard/product', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            }).then(response => {
                if (response.ok) {
                    closeProductModal();
                    location.reload();
                }
            });
        });
    </script>
</body>
</html>